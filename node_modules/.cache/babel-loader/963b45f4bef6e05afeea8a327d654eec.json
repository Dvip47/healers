{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vivek\\\\react\\\\healers\\\\src\\\\Component\\\\Form\\\\Dynamic Form\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [formValues, setFormValues] = useState([{\n    name: \"\",\n    email: \"\"\n  }]);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      name: \"\",\n      email: \"\"\n    }]);\n  };\n\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [formValues.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: element.name || \"\",\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: element.email || \"\",\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button remove\",\n          onClick: () => removeFormFields(index),\n          children: [\" \", \"Remove\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button submit\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"eIceQPbikPh3jO0Jpq6fNg7VpnM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Login","Home","formValues","setFormValues","name","email","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","index","element"],"sources":["D:/Vivek/react/healers/src/Component/Form/Dynamic Form/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Login from \"./Login\";\r\nimport \"./style.css\";\r\nfunction Home() {\r\n  const [formValues, setFormValues] = useState([{ name: \"\", email: \"\" }]);\r\n  let handleChange = (i, e) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setFormValues(newFormValues);\r\n  };\r\n  let addFormFields = () => {\r\n    setFormValues([...formValues, { name: \"\", email: \"\" }]);\r\n  };\r\n  let removeFormFields = (i) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(JSON.stringify(formValues));\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        {formValues.map((index) => (\r\n          <div className=\"form-inline\" key={index}>\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={element.name || \"\"}\r\n              onChange={(e) => handleChange(index, e)}\r\n            />\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={element.email || \"\"}\r\n              onChange={(e) => handleChange(index, e)}\r\n            />\r\n            {index ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"button remove\"\r\n                onClick={() => removeFormFields(index)}\r\n              >\r\n                {\" \"}\r\n                Remove\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"button-section\">\r\n          <button className=\"button submit\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;;;AACA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAC;IAAEK,IAAI,EAAE,EAAR;IAAYC,KAAK,EAAE;EAAnB,CAAD,CAAD,CAA5C;;EACA,IAAIC,YAAY,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC3B,IAAIC,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAApB;IACAO,aAAa,CAACF,CAAD,CAAb,CAAiBC,CAAC,CAACE,MAAF,CAASN,IAA1B,IAAkCI,CAAC,CAACE,MAAF,CAASC,KAA3C;IACAR,aAAa,CAACM,aAAD,CAAb;EACD,CAJD;;EAKA,IAAIG,aAAa,GAAG,MAAM;IACxBT,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB;MAAEE,IAAI,EAAE,EAAR;MAAYC,KAAK,EAAE;IAAnB,CAAhB,CAAD,CAAb;EACD,CAFD;;EAGA,IAAIQ,gBAAgB,GAAIN,CAAD,IAAO;IAC5B,IAAIE,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAApB;IACAO,aAAa,CAACK,MAAd,CAAqBP,CAArB,EAAwB,CAAxB;IACAJ,aAAa,CAACM,aAAD,CAAb;EACD,CAJD;;EAKA,IAAIM,YAAY,GAAIC,KAAD,IAAW;IAC5BA,KAAK,CAACC,cAAN;IACAC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAelB,UAAf,CAAD,CAAL;EACD,CAHD;;EAIA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEa,YAAhB;MAAA,WACGb,UAAU,CAACmB,GAAX,CAAgBC,KAAD,iBACd;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,KAAK,EAAEC,OAAO,CAACnB,IAAR,IAAgB,EAHzB;UAIE,QAAQ,EAAGI,CAAD,IAAOF,YAAY,CAACgB,KAAD,EAAQd,CAAR;QAJ/B;UAAA;UAAA;UAAA;QAAA,QAFF,eAQE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,KAAK,EAAEe,OAAO,CAAClB,KAAR,IAAiB,EAH1B;UAIE,QAAQ,EAAGG,CAAD,IAAOF,YAAY,CAACgB,KAAD,EAAQd,CAAR;QAJ/B;UAAA;UAAA;UAAA;QAAA,QATF,EAeGc,KAAK,gBACJ;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,eAFZ;UAGE,OAAO,EAAE,MAAMT,gBAAgB,CAACS,KAAD,CAHjC;UAAA,WAKG,GALH;QAAA;UAAA;UAAA;UAAA;QAAA,QADI,GASF,IAxBN;MAAA,GAAkCA,KAAlC;QAAA;QAAA;QAAA;MAAA,QADD,CADH,eA8BE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE;UAAQ,SAAS,EAAC,eAAlB;UAAkC,IAAI,EAAC,QAAvC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAwCD;;GA3DQrB,I;;KAAAA,I;AA6DT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}